{"version":3,"sources":["Components/Header.js","Components/Submit.js","Components/Todo.js","Components/PageHeader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","numTodos","Submit","state","term","handleSubmit","e","preventDefault","onFormSubmit","setState","onSubmit","this","type","placeholder","value","onChange","target","React","Component","Todo","class","onClick","onDelete","id","content","TodoList","todos","tasks","map","todo","index","pageheader","App","task","handleDelete","newArr","splice","PageHeader","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAeeA,MAXf,SAAgBC,GACd,OACE,qBAAKC,UAAU,eAAf,SACE,qBAAIA,UAAU,qBAAd,sBACYD,EAAME,SADlB,gCCuBSC,E,4MA1BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAEC,iBACsB,KAApB,EAAKJ,MAAMC,OACf,EAAKL,MAAMS,aAAa,EAAKL,MAAMC,MACnC,EAAKK,SAAS,CAAEL,KAAM,O,4CAGxB,WAAU,IAAD,OACP,OACE,uBAAMM,SAAUC,KAAKN,aAArB,UACE,uBACEO,KAAK,OACLZ,UAAU,QACVa,YAAY,aACZC,MAAOH,KAAKR,MAAMC,KAElBW,SAAU,SAACT,GAAD,OAAO,EAAKG,SAAS,CAAEL,KAAME,EAAEU,OAAOF,WAElD,wBAAQd,UAAU,SAAlB,2B,GArBaiB,IAAMC,WCcrBC,EAAO,SAACpB,GACV,OACI,sBAAKC,UAAW,YAAhB,UACI,wBAAQoB,MAAM,SAASC,QAAU,WAAOtB,EAAMuB,SAASvB,EAAMwB,KAA7D,sBACCxB,EAAMyB,YAQJC,EA3BE,SAAC1B,GAEd,IAAM2B,EAAQ3B,EAAM4B,MAAMC,KAAI,SAACC,EAAMC,GAEjC,OAAO,cAAC,EAAD,CAAMN,QAASK,EAAkBN,GAAIO,EAAOR,SAAUvB,EAAMuB,UAAlCQ,MAGrC,OACI,qBAAK9B,UAAW,eAAhB,SACC0B,K,MCGMK,MAVf,WACE,OAGE,aAFA,CAEA,UAAQ/B,UAAU,aAAlB,SACE,wDCuCSgC,E,4MAjCb7B,MAAQ,CACNwB,MAAO,CAAC,kCAAoC,+BAAgC,0C,EAM9EtB,aAAe,SAAC4B,GACd,EAAKxB,SAAS,CAAEkB,MAAM,GAAD,mBAAM,EAAKxB,MAAMwB,OAAjB,CAAwBM,O,EAI/CC,aAAe,SAACJ,GACd,IAAMK,EAAM,YAAO,EAAKhC,MAAMwB,OAC9BQ,EAAOC,OAAON,EAAO,GACrB,EAAKrB,SAAS,CAAEkB,MAAOQ,K,4CAGzB,WACE,OAEE,sBAAKnC,UAAU,UAAf,UACE,cAACqC,EAAD,IACA,sBAAKrC,UAAU,aAAf,UACE,cAAC,EAAD,CAAQC,SAAUU,KAAKR,MAAMwB,MAAMW,SACnC,cAAC,EAAD,CAAUX,MAAOhB,KAAKR,MAAMwB,MAAOL,SAAUX,KAAKuB,eAClD,cAAC,EAAD,CAAQ1B,aAAcG,KAAKN,yB,GA9BnBa,aCCHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5ca1db87.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../Styles/todolist.css\";\r\n\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"class-header\">\r\n      <h1 className=\"class-header-title\">\r\n        You have {props.numTodos} Exercises to Complete.\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\n \r\nexport default Header\r\n\r\n\r\n\r\n// RFCE //","import React from \"react\";\r\n\r\n// We are passing state //\r\nclass Submit extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.term === \"\") return;\r\n    this.props.onFormSubmit(this.state.term);\r\n    this.setState({ term: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Enter Item\"\r\n          value={this.state.term}\r\n          // Changes are rendered through React, not the browser //\r\n          onChange={(e) => this.setState({ term: e.target.value })}\r\n        />\r\n        <button className=\"button\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Submit;\r\n","import React from 'react'\r\n\r\nconst TodoList = (props) => {\r\n    //Have access to all the todos we will pass. Pass the tasks as a prop //\r\n    const todos = props.tasks.map((todo, index) => {\r\n        //Whenever we use .map we use a unique key, Index as a parameter //\r\n        return <Todo content={todo} key={index} id={index} onDelete={props.onDelete} />\r\n    })\r\n\r\n    return (\r\n        <div className= \"list-wrapper\">\r\n        {todos}\r\n        </div>\r\n    );\r\n}\r\n\r\n//Dislaying the content of the task string //\r\nconst Todo = (props) => {\r\n    return(\r\n        <div className= 'list-item'>\r\n            <button class='delete' onClick= {() => {props.onDelete(props.id)}}> ‚ùé </button>\r\n            {props.content}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TodoList\r\n","import React from \"react\";\r\nimport \"../Styles/pageheader.css\";\r\n\r\n\r\nfunction pageheader() {\r\n  return (\r\n    // JSX. Can Only Display One Element At A Time // Multiple Elements\r\n    // In An Empty Div // Semantic HTML Is Beneficial When It Comes To Writing Components //\r\n    <header className=\"pageheader\">\r\n      <h1>Upper Body Workout!</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default pageheader;","import \"./Styles/todolist.css\";\n// To Call Components To Page //\nimport React, { Component } from \"react\";\nimport Header from \"./Components/Header\";\nimport Submit from \"./Components/Submit\";\nimport TodoList from \"./Components/Todo\";\nimport PageHeader from \"./Components/PageHeader\";\n\n// CTRL Space, Press Enter After Typing //\n\n\nclass App extends Component {\n\n\n\n  state = {\n    tasks: [\" Bench Press: 3 Set * 6-8 Reps \",  \" Pull-Ups: 3 Set * 6-8 Reps \", \" Seated Cable Row: 3 Set * 8-10 Reps \"],\n  };\n\n  // Handles Submit Button //\n  // The function copies the content of the //\n  // old task array and adds a new task as well //\n  handleSubmit = (task) => {\n    this.setState({ tasks: [...this.state.tasks, task] });\n  };\n\n  //the delete button //removes an element form the tasks array\n  handleDelete = (index) => {\n    const newArr = [...this.state.tasks];\n    newArr.splice(index, 1);\n    this.setState({ tasks: newArr });\n  };\n\n  render() {\n    return (\n      \n      <div className=\"wrapper\">\n        <PageHeader />\n        <div className=\"card frame\">\n          <Header numTodos={this.state.tasks.length} />\n          <TodoList tasks={this.state.tasks} onDelete={this.handleDelete} />\n          <Submit onFormSubmit={this.handleSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n{/*  */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}